using UnityEngine;
using System.Collections.Generic;

public class GameManager : MonoBehaviour
{
    public GameObject cardPrefab;
    public Transform[] cardSlots; // 4 card slots

    private List<CardData> cardPool = new List<CardData>();
    private List<Card> currentCards = new List<Card>();

    void Start()
    {
        InitializeCardPool();
        InitializeCards();
    }

    void InitializeCardPool()
    {
        cardPool.Clear();

        // Adding cards with name, damage, and weighting
        AddCardToPool(new CardData("Light Strike", 1, true), 50);  // 50% chance
        AddCardToPool(new CardData("Strong Hit", 2, true), 30);    // 30% chance
        AddCardToPool(new CardData("Power Smash", 3, true), 15);   // 15% chance
        AddCardToPool(new CardData("Heal", -2, false), 5);         // 5% chance

        ShuffleCardPool();
    }

    void AddCardToPool(CardData card, int weight)
    {
        for (int i = 0; i < weight; i++)
        {
            cardPool.Add(card);
        }
    }

    void ShuffleCardPool()
    {
        for (int i = cardPool.Count - 1; i > 0; i--)
        {
            int randomIndex = Random.Range(0, i + 1);
            (cardPool[i], cardPool[randomIndex]) = (cardPool[randomIndex], cardPool[i]);
        }
    }

    void InitializeCards()
    {
        for (int i = 0; i < cardSlots.Length; i++)
        {
            SpawnNewCard(i);
        }
    }

    void SpawnNewCard(int slotIndex)
    {
        GameObject newCard = Instantiate(cardPrefab, cardSlots[slotIndex]);
        Card cardComponent = newCard.GetComponent<Card>();

        CardData randomCard = cardPool[Random.Range(0, cardPool.Count)];

        cardComponent.Initialize(randomCard.name, randomCard.damage, randomCard.endTurn);
        currentCards.Insert(slotIndex, cardComponent);
    }
}

// Structure to store card properties
[System.Serializable]
public class CardData
{
    public string name;
    public int damage;
    public bool endTurn;

    public CardData(string name, int damage, bool endTurn)
    {
        this.name = name;
        this.damage = damage;
        this.endTurn = endTurn;
    }
}
